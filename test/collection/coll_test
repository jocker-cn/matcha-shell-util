#!/bin/bash
#
# Test for collection model
# Copyright 2023 Joker

source ../../src/core/collection/controller
source ../../src/core/log/matcha_log

function test_map() {
  log_info "[TEST] collection model map"
  local map_key1="key1"
  local map_key2="key2"
  local map_value1="value1"
  local map_value2="value2"
  local fail
  {
    map_put $map_key1 $map_value1
    map_put $map_key2 $map_value2
  } && {
    if [[ $(map_get $map_key1) == "$map_value1" ]] && [[ $(map_get $map_key2) == "$map_value2" ]]; then
      log_info "[TEST] map put get successfully"
    else
      fail=1
    fi
  } && {
    map_remove $map_key2
    local keys
    keys=$(map_keys)
    if [[ ${#keys[@]} == 1 ]] && [[ "${keys[0]}" == "$map_key1" ]]; then
      log_info "[TEST] remove keys  successfully"
    else
      fail=1
    fi
  } && {
    local values
    values=$(map_values)
    if [[ ${#values[@]} == 1 ]] && [[ "${values[0]}" == "$map_value1" ]]; then
      log_info "[TEST] values  successfully"
    else
      fail=1
    fi
  }
  return $fail
}

function test_stack() {

  local stackA="A"
  local stackB="B"
  local stackC="C"
  local stackD="D"
  {
    stack_push $stackA
    stack_push $stackB
    stack_push $stackC
    stack_push $stackD

    if [[ $(stack_is_empty) == "0" ]]; then
      log_error "[TEST] stack_push or stack_is_empty test failed"
      return 1
    fi
   echo "$(stack_peek)"
    if [[ $(stack_peek) != "$stackD" ]]; then
      log_error "[TEST] stack_peek test failed"
      return 1
    fi
    stack_pop
    if [[ $(stack_peek) != "$stackC" ]]; then
      log_error "[TEST] stack_pop test failed"
      return 1
    fi
    stack_pop
    stack_pop
    stack_pop
    stack_pop
    if [[ $(stack_is_empty) == "1" ]]; then
      log_error "[TEST] stack_is_empty or stack_pop test successfully"
      return 1
    fi

  }

}
function main() {
  test_map
  if [[ "$?" == "1" ]]; then
    log_error "[TEST] collection model map test failed"
  else
    log_info "[TEST] collection model map test successfully"
  fi

  test_stack

  if [[ "$?" == "1" ]]; then
    log_error "[TEST] collection model stack test failed"
  else
    log_info "[TEST] collection model stack test successfully"
  fi
}

main "$@"
